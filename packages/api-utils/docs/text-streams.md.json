[["version", 2], ["markdown", "<!-- contributed by Drew Willcoxon [adw@mozilla.com]  -->\n<!-- edited by Noelle Murata [fiveinchpixie@gmail.com]  -->\n\nThe `text-streams` module provides streams for reading and writing text using\nparticular character encodings.\n\n"], ["api-json", {"line_number": 7, "name": "TextReader", "constructors": [{"line_number": 9, "name": "TextReader", "params": [{"line_number": 13, "required": true, "type": "stream", "name": "inputStream", "description": "The backing stream, an [`nsIInputStream`](http://mxr.mozilla.org/mozilla-central/source/xpcom/io/nsIInputStream.idl).\nIt must already be opened."}, {"line_number": 16, "required": false, "type": "string", "name": "charset", "description": "`inputStream` is expected to be in the character encoding named by this value.\nIf not specified, \"UTF-8\" is assumed.  See [`nsICharsetConverterManager.idl`](http://mxr.mozilla.org/mozilla-central/source/intl/uconv/idl/nsICharsetConverterManager.idl)\nfor documentation on how to determine other valid values for this."}], "signature": "TextReader(inputStream, charset)", "type": "constructor", "description": "Creates a buffered input stream that reads text from a backing stream using a\ngiven text encoding."}], "methods": [{"line_number": 27, "signature": "close()", "type": "method", "name": "close", "description": "Closes both the stream and its backing stream."}, {"line_number": 32, "name": "read", "returns": {"line_number": 39, "type": "string", "description": "The string read.  If the stream is at the end, the empty string is returned."}, "params": [{"line_number": 36, "required": false, "type": "number", "name": "numChars", "description": "The number of characters to read.  If not given, the remainder of the stream\nis read."}], "signature": "read(numChars)", "type": "method", "description": "Reads and returns a string from the stream.  If the stream is closed, an\nexception is thrown."}], "type": "class", "properties": [{"line_number": 22, "property_type": "boolean", "type": "property", "name": "closed", "description": "True if the stream is closed."}], "description": "\n\n\n"}], ["markdown", "\n\n\n"], ["api-json", {"line_number": 46, "name": "TextWriter", "constructors": [{"line_number": 48, "name": "TextWriter", "params": [{"line_number": 52, "required": true, "type": "stream", "name": "outputStream", "description": "The backing stream, an [`nsIOutputStream`](http://mxr.mozilla.org/mozilla-central/source/xpcom/io/nsIOutputStream.idl).\nIt must already be opened."}, {"line_number": 55, "required": false, "type": "string", "name": "charset", "description": "Text will be written to `outputStream` using the character encoding named by\nthis value.  If not specified, \"UTF-8\" is assumed.  See [`nsICharsetConverterManager.idl`](http://mxr.mozilla.org/mozilla-central/source/intl/uconv/idl/nsICharsetConverterManager.idl)\nfor documentation on how to determine other valid values for this."}], "signature": "TextWriter(outputStream, charset)", "type": "constructor", "description": "Creates a buffered output stream that writes text to a backing stream using a\ngiven text encoding."}], "methods": [{"line_number": 66, "signature": "close()", "type": "method", "name": "close", "description": "Flushes the backing stream's buffer and closes both the stream and the backing\nstream.  If the stream is already closed, an exception is thrown."}, {"line_number": 72, "signature": "flush()", "type": "method", "name": "flush", "description": "Flushes the backing stream's buffer."}, {"line_number": 77, "name": "write", "params": [{"line_number": 81, "required": true, "type": "string", "name": "str", "description": "The string to write."}], "signature": "write(str)", "type": "method", "description": "Writes a string to the stream.  If the stream is closed, an exception is\nthrown."}, {"line_number": 85, "name": "writeAsync", "params": [{"line_number": 91, "required": true, "type": "string", "name": "str", "description": "The string to write."}, {"line_number": 93, "required": false, "type": "callback", "name": "callback", "description": "*`callback`*, if given, must be a function.  It's called as `callback(error)`\n when the write completes.  `error` is an `Error` object or undefined if there\n was no error.  Inside *`callback`*, `this` is the `TextWriter` object."}], "signature": "writeAsync(str, callback)", "type": "method", "description": "Writes a string on a background thread.  After the write completes, the\nbacking stream's buffer is flushed, and both the stream and the backing stream\nare closed, also on the background thread.  If the stream is already closed,\nan exception is thrown immediately."}], "type": "class", "properties": [{"line_number": 61, "property_type": "boolean", "type": "property", "name": "closed", "description": "True if the stream is closed."}], "description": "\n\n\n\n"}], ["markdown", "\n"]]