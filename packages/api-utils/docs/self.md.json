[["version", 2], ["markdown", "The `self` module provides access to data that is bundled with the add-on\nas a whole. It also provides the \"add-on ID\", a value which is unique for each\nadd-on.\n\n"], ["api-json", {"line_number": 5, "property_type": "string", "type": "property", "name": "id", "description": "This property is a printable string that is unique for each add-on. It comes\nfrom the `id` property set in the `package.json` file in the main package\n(i.e. the package in which you run `cfx xpi`). While not generally of use to\nadd-on code directly, it can be used by internal API code to index local\nstorage and other resources that are associated with a particular add-on.\nEventually, this ID will be unspoofable (see\n[JEP 118](https://wiki.mozilla.org/Labs/Jetpack/Reboot/JEP/118) for details)."}], ["markdown", "\n\n<span class=\"aside\">\nThe [Package Specification](#guide/package-spec) section explains the\n`package.json` file.\n</span>\n\n"], ["api-json", {"line_number": 21, "methods": [{"line_number": 28, "name": "data.load", "returns": {"line_number": 37, "type": "string", "description": ""}, "params": [{"line_number": 34, "required": true, "type": "string", "name": "name", "description": "The filename to be read, relative to the\npackage's `data` directory. Each package that uses the `self` module\nwill see its own `data` directory."}], "signature": "data.load(name)", "type": "method", "description": "The `data.load(NAME)` method returns the contents of an embedded data file,\nas a string. It is most useful for data that will be modified or parsed in\nsome way, such as JSON, XML, plain text, or perhaps an HTML template. For\ndata that can be displayed directly in a content frame, use `data.url(NAME)`."}, {"line_number": 40, "name": "data.url", "returns": {"line_number": 56, "type": "URL", "description": ""}, "params": [{"line_number": 53, "required": true, "type": "string", "name": "name", "description": "The filename to be read, relative to the\npackage's `data` directory. Each package that uses the `self` module\nwill see its own `data` directory."}], "signature": "data.url(name)", "type": "method", "description": "The `data.url(NAME)` method returns a URL instance that points at an embedded\ndata file. It is most useful for data that can be displayed directly in a\ncontent frame. The URL instance can be passed to a content frame constructor,\nsuch as the Panel:\n\n    var self = require(\"self\");\n    var myPanel = require(\"panel\").Panel({\n      contentURL: self.data.url(\"my-panel-content.html\")\n    });\n    myPanel.show();\n"}], "description": "The `data` object is used to access data that was bundled with the add-on.\nThis data lives in the main package's `data/` directory, immediately below\nthe `package.json` file. All files in this directory will be copied into the\nXPI and made available through the `data` object.\n\n", "property_type": "object", "type": "property", "name": "data"}], ["markdown", "\n"]]