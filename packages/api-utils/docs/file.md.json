[["version", 2], ["markdown", "<!-- contributed by Drew Willcoxon [adw@mozilla.com]  -->\n<!-- contributed by Atul Varma [atul@mozilla.com]  -->\n<!-- edited by Noelle Murata [fiveinchpixie@gmail.com]  -->\n\n\nThe `file` module provides access to the local filesystem.\n\n"], ["api-json", {"line_number": 8, "name": "dirname", "returns": {"line_number": 13, "type": "string", "description": "The path of the directory containing the file."}, "params": [{"line_number": 11, "required": true, "type": "string", "name": "path", "description": "The path of a file."}], "signature": "dirname(path)", "type": "function", "description": "Returns the path of the directory containing the given file."}], ["markdown", "\n\n"], ["api-json", {"line_number": 17, "name": "exists", "returns": {"line_number": 22, "type": "boolean", "description": "True if the file exists and false otherwise."}, "params": [{"line_number": 20, "required": true, "type": "string", "name": "path", "description": "The path of a file."}], "signature": "exists(path)", "type": "function", "description": "Returns true if a file exists at the given path and false otherwise."}], ["markdown", "\n\n"], ["api-json", {"line_number": 26, "name": "join", "returns": {"line_number": 32, "type": "string", "description": "A single string formed by joining the strings on the file system's path\nseparator."}, "params": [{"line_number": 30, "required": true, "type": "strings", "name": "...", "description": "A variable number of strings to join."}], "signature": "join(...)", "type": "function", "description": "Takes a variable number of strings, joins them on the file system's path\nseparator, and returns the result."}], ["markdown", "\n\n"], ["api-json", {"line_number": 37, "name": "list", "returns": {"line_number": 42, "type": "array", "description": "An array of file names.  Each is a basename, not a full path."}, "params": [{"line_number": 40, "required": true, "type": "string", "name": "path", "description": "The path of the directory."}], "signature": "list(path)", "type": "function", "description": "Returns an array of file names in the given directory."}], ["markdown", "\n\n"], ["api-json", {"line_number": 46, "name": "mkpath", "params": [{"line_number": 51, "required": true, "type": "string", "name": "path", "description": "The path to create."}], "signature": "mkpath(path)", "type": "function", "description": "Makes a new directory named by the given path.  Any subdirectories that do not\nexist are also created.  `mkpath` can be called multiple times on the same\npath."}], ["markdown", "\n\n"], ["api-json", {"line_number": 55, "name": "open", "returns": {"line_number": 67, "type": "stream", "description": "A stream that can be used to access or modify the contents of the file.  See\n[`text-streams`](#module/api-utils/text-streams) and\n[`byte-streams`](#module/api-utils/byte-streams) for more information.\nOpened files should always be closed after use by calling `close` on the\nreturned stream."}, "params": [{"line_number": 58, "required": true, "type": "string", "name": "path", "description": "The path of the file to open."}, {"line_number": 60, "required": false, "type": "string", "name": "mode", "description": "An optional string, each character of which describes a characteristic of the\nreturned stream.  If the string contains `\"r\"`, the file is opened in\nread-only mode.  `\"w\"` opens the file in write-only mode.  `\"b\"` opens the\nfile in binary mode.  If `\"b\"` is not present, the file is opened in text\nmode, and its contents are assumed to be UTF-8.  If *`mode`* is not given,\n`\"r\"` is assumed, and the file is opened in read-only text mode."}], "signature": "open(path, mode)", "type": "function", "description": "Returns a stream providing access to the contents of a file."}], ["markdown", "\n\n"], ["api-json", {"line_number": 75, "name": "read", "returns": {"line_number": 80, "type": "string", "description": "A string containing the file's entire contents."}, "params": [{"line_number": 78, "required": true, "type": "string", "name": "path", "description": "The path of the file to read."}], "signature": "read(path)", "type": "function", "description": "Opens a file in text mode and returns a string containing its entire contents."}], ["markdown", "\n\n"], ["api-json", {"line_number": 84, "name": "remove", "params": [{"line_number": 87, "required": true, "type": "string", "name": "path", "description": "The path of the file to remove."}], "signature": "remove(path)", "type": "function", "description": "Removes a file from the file system.  To remove directories, use `rmdir`."}], ["markdown", "\n\n"], ["api-json", {"line_number": 91, "name": "rmdir", "params": [{"line_number": 95, "required": true, "type": "string", "name": "path", "description": "The path of the directory to remove."}], "signature": "rmdir(path)", "type": "function", "description": "Removes a directory from the file system.  If the directory is not empty, an\nexception is thrown."}], ["markdown", "\n"]]