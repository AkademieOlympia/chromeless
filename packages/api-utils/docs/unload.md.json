[["version", 2], ["markdown", "<!-- contributed by Atul Varma [atul@mozilla.com]  -->\n<!-- contributed by Drew Willcoxon [adw@mozilla.com]  -->\n<!-- edited by Noelle Murata [fiveinchpixie@gmail.com]  -->\n\nThe `unload` module allows modules to register callbacks that are called\nwhen they are unloaded.  It is similar to the CommonJS module of the same\nname in the [Narwhal] platform.\n\n[Narwhal]: http://narwhaljs.org/\n\n"], ["api-json", {"line_number": 11, "name": "ensure", "params": [{"line_number": 27, "required": true, "type": "object", "name": "object", "description": "An object that defines an `unload()` method."}], "signature": "ensure(object)", "type": "function", "description": "Calling `ensure()` on an object does two things:\n\n1. It replaces `object.unload()` with a wrapper method that will never call\n   `object.unload()` more than once.\n2. It ensures that this wrapper method is called when `send()` is\n   called.\n\nTherefore, when you register an object with `ensure()`, you can call its\n`unload()` method yourself, you can let it happen for you, or you can do both.\n\n`object.unload()` will be called with a single argument describing the reason\nfor the unload; see `when()`.  If `object` does not have an `unload()` method,\nthen an exception is thrown when `ensure()` is called.\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 31, "name": "when", "params": [{"line_number": 35, "required": true, "type": "function", "name": "callback", "description": "A function that will be called when `send()` is called.  It is called with a\nsingle argument, one of the following strings describing the reason for\nunload: `\"uninstall\"`, `\"disable\"`, `\"shutdown\"`, `\"upgrade\"`, or\n`\"downgrade\"`.  (On Gecko 1.9.2-based applications such as Firefox 3.6,\n`\"upgrade\"` and `\"downgrade\"` are not available, and `\"shutdown\"` will be sent\nin their place.)  If a reason could not be determined, `undefined` will be\npassed instead.  Note that if an add-on is unloaded with reason `\"disable\"`,\nit will not be notified about `\"uninstall\"` while it is disabled.  A solution\nto this issue is being investigated; see bug 571049."}], "signature": "when(callback)", "type": "function", "description": "Registers a function to be called when `send()` is called.\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 47, "name": "send", "params": [{"line_number": 53, "required": false, "type": "string", "name": "reason", "description": "An optional string describing the reason for unload; see `unload.when()`."}], "signature": "send(reason)", "type": "function", "description": "Sends an \"unload signal\", thereby triggering all callbacks registered via\n`when()`. In general, this function need not be manually called; it is\nautomatically triggered by the embedder.\n"}], ["markdown", "\n"]]